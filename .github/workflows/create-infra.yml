name: "Create Infra"
on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'A GitHub Environment to pull action secrets from'
        required: true
        type: environment
env:
    ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
    ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
    ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
    ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
    TF_BACKEND_RESOURCE_GRP: "${{ secrets.AZURE_TRF_RSG }}"
    TF_BACKEND_STORAGE_ACCOUNT: "${{ secrets.AZURE_TRF_STORAGE_ACCOUNT }}"
    TF_BACKEND_CONTAINER_NAME: "${{ secrets.AZURE_TRF_CONTAINER_NAME }}"
    TF_BACKEND_KEY: "${{ secrets.AZURE_TRF_KEY_TFSTATE }}"
    AZURE_RSG: "${{ vars.AZURE_RSG }}"
concurrency:
  group: ${{ github.workflow }}-${{ inputs.ENVIRONMENT }}
  cancel-in-progress: true

jobs:
    terraform:
      name: "Create the infra"
      runs-on: ubuntu-latest
      environment: ${{ inputs.ENVIRONMENT }}
      defaults:
        run:
          #shell: bash
          working-directory: ./terraform

      steps:

        - name: Checkout source code
          uses: actions/checkout@v4

        - name: Setup Terraform with specified version on the runner
          uses: hashicorp/setup-terraform@v3

        - name: Print Input Variables
          id: input_print
          run: |
            echo "Environment Used : ${{ inputs.ENVIRONMENT }}"
          
        - name: Terraform init
          id: init
          run: terraform init -backend-config=resource_group_name="${{ env.TF_BACKEND_RESOURCE_GRP }}" -backend-config=storage_account_name="${{ env.TF_BACKEND_STORAGE_ACCOUNT }}" -backend-config=container_name="${{ env.TF_BACKEND_CONTAINER_NAME }}" -backend-config=key="${{ env.TF_BACKEND_KEY }}"

        - name: Terraform format
          id: fmt
          run: terraform fmt -check

        - name: Terraform validate
          id: validate
          run: terraform validate

        - name: Terraform plan
          id: terra_plan
          run: terraform plan -var=resource_group_name="${{ env.AZURE_RSG }}" -no-color -input=false -out planfile
          continue-on-error: true

        - name: Terraform plan status
          if: steps.terra_plan.outcome == 'failure' 
          run: exit 1

        - name: Terraform Apply
          id: terra_apply
          #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false -parallelism=1 planfile